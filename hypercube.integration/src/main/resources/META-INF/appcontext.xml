<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.2.xsd
         http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
         http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.noe.hypercube.domain"/>
    <tx:annotation-driven/>

    <import resource="appcontext-persistence.xml"/>
    <import resource="appontext-observation.xml"/>
    <import resource="classpath*:**/*-account-context.xml"/>

    <bean id="app" class="com.noe.hypercube.HyperCubeApp" destroy-method="stop"/>

    <bean id="accountController" class="com.noe.hypercube.controller.AccountController" lazy-init="true">
        <constructor-arg ref="accountBoxCollection"/>
    </bean>

    <bean id="propertyPlaceholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:auth.properties</value>
                <value>classpath:sync.properties</value>
            </list>
        </property>
    </bean>

    <bean id="synchronizer" class="com.noe.hypercube.synchronization.Synchronizer" destroy-method="shutdown"/>
    <bean id="accountBoxCollection" class="com.noe.hypercube.collector.AccountBoxCollector" lazy-init="true"/>
    <bean id="accountProperties" class="com.noe.hypercube.collector.AccountPropertiesCollector"/>

    <bean id="persistenceController" class="com.noe.hypercube.controller.PersistenceController">
        <constructor-arg ref="daos"/>
    </bean>
    <bean id="daos" class="com.noe.hypercube.collector.DaoCollector" depends-on="accountBoxCollection"/>

    <bean id="fileMonitor" class="com.noe.hypercube.observer.local.LocalFileMonitor" destroy-method="stop">
        <constructor-arg value="${poll.delay.in.milisec}"/>
    </bean>

    <bean id="cloudMonitor" class="com.noe.hypercube.observer.remote.CloudMonitor" destroy-method="stop">
        <constructor-arg value="${poll.delay.in.milisec}"/>
    </bean>

    <bean id="localObserverFactory" class="com.noe.hypercube.observer.local.LocalObserverFactory"/>
    <bean id="cloudObserverFactory" class="com.noe.hypercube.observer.remote.CloudObserverFactory" lazy-init="true"/>
    <bean id="localDirectoryCollector" class="com.noe.hypercube.mapping.collector.LocalDirectoryCollector"/>
    <bean id="remoteDirectoryCollector" class="com.noe.hypercube.mapping.collector.RemoteDirectoryCollector"/>
    <bean class="com.noe.hypercube.bridge.AccountDataBridge"/>
    <bean class="com.noe.hypercube.bridge.PersistenceDataBridge"/>

</beans>
